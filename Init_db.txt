-- Generated by Oracle SQL Developer Data Modeler 18.3.0.268.1208
--   at:        2018-12-09 17:32:55 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE godziny_zajec (
    numer                 INTEGER NOT NULL,
    godzina_rozpoczecia   INTERVAL DAY(0) TO SECOND(0) NOT NULL,
    godzina_zakonczenia   INTERVAL DAY(0) TO SECOND(0) NOT NULL
);

ALTER TABLE godziny_zajec ADD CONSTRAINT godzinyzajec_pk PRIMARY KEY ( numer );

CREATE TABLE grupy_dziekanskie (
    id           INTEGER NOT NULL,
    symbol       VARCHAR2(5 CHAR),
    semestr_id   INTEGER NOT NULL
);

ALTER TABLE grupy_dziekanskie ADD CONSTRAINT grupa_dziekanska_pk PRIMARY KEY ( id );

ALTER TABLE grupy_dziekanskie ADD CONSTRAINT grupa_na_semestr__un UNIQUE ( symbol,
                                                                           semestr_id );

CREATE TABLE kierunki (
    id           INTEGER NOT NULL,
    nazwa        VARCHAR2(15 CHAR),
    wydzial_id   VARCHAR2(7 CHAR) NOT NULL
);

ALTER TABLE kierunki ADD CONSTRAINT kierunki_pk PRIMARY KEY ( id );

ALTER TABLE kierunki ADD CONSTRAINT kierunek_na_wydzial_un UNIQUE ( nazwa,
                                                                    wydzial_id );

CREATE TABLE oceny (
    id             INTEGER NOT NULL,
    wartosc        NUMBER(1, 2),
    zajecia_id     INTEGER,
    student_id     VARCHAR2(12 CHAR),
    pracownik_id   VARCHAR2(12 CHAR)
);

ALTER TABLE oceny ADD CONSTRAINT oceny_pk PRIMARY KEY ( id );

CREATE TABLE osoby (
    id         VARCHAR2(12 CHAR) NOT NULL,
    imie       VARCHAR2(20 CHAR) NOT NULL,
    nazwisko   VARCHAR2(40 CHAR) NOT NULL,
    pesel      VARCHAR2(11 CHAR) NOT NULL,
    haslo      VARCHAR2(100 CHAR) NOT NULL,
    typ        VARCHAR2(15 CHAR)
);

ALTER TABLE osoby ADD CONSTRAINT osoba_pk PRIMARY KEY ( id );

ALTER TABLE osoby ADD CONSTRAINT pesel_un UNIQUE ( pesel );

CREATE TABLE pracownicy (
    id          VARCHAR2(12 CHAR) NOT NULL,
    stopien     VARCHAR2(20 CHAR) NOT NULL,
    zespol_id   INTEGER
);

ALTER TABLE pracownicy ADD CONSTRAINT pracownik_pk PRIMARY KEY ( id );

CREATE TABLE przedmioty (
    id           INTEGER NOT NULL,
    nazwa        VARCHAR2(20),
    semestr_id   INTEGER NOT NULL
);

ALTER TABLE przedmioty ADD CONSTRAINT przedmioty_pk PRIMARY KEY ( id );

CREATE TABLE sale (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE sale ADD CONSTRAINT sale_pk PRIMARY KEY ( id );

ALTER TABLE sale ADD CONSTRAINT nazwa_un UNIQUE ( nazwa );

CREATE TABLE semestr (
    id            INTEGER NOT NULL,
    numer         INTEGER,
    rok           INTEGER,
    stopien       INTEGER,
    tryb          VARCHAR2(20 CHAR),
    pora_roku     VARCHAR2(10 CHAR),
    kierunek_id   INTEGER NOT NULL
);

ALTER TABLE semestr ADD CONSTRAINT semestr_pk PRIMARY KEY ( id );

CREATE TABLE studenci (
    id             VARCHAR2(12 CHAR) NOT NULL,
    strona_grupy   VARCHAR2(10 CHAR),
    grupa_id       INTEGER NOT NULL
);

ALTER TABLE studenci ADD CONSTRAINT student_pk PRIMARY KEY ( id );

CREATE TABLE wydzialy (
    nazwa   VARCHAR2(20 CHAR) NOT NULL,
    skrot   VARCHAR2(7 CHAR) NOT NULL
);

ALTER TABLE wydzialy ADD CONSTRAINT wydzialy_pk PRIMARY KEY ( skrot );

ALTER TABLE wydzialy ADD CONSTRAINT wydzialy_nazwa_un UNIQUE ( nazwa );

CREATE TABLE zajecia (
    id             INTEGER NOT NULL,
    typ            VARCHAR2(20),
    przedmiot_id   INTEGER NOT NULL
);

ALTER TABLE zajecia ADD CONSTRAINT zajecia_pk PRIMARY KEY ( id );

ALTER TABLE zajecia ADD CONSTRAINT zajecia_na_przedmiot_un UNIQUE ( typ,
                                                                    przedmiot_id );

CREATE TABLE zajecia_w_planie (
    dzien_tygodnia   VARCHAR2(10 CHAR),
    grupa_id         INTEGER NOT NULL,
    zajecia_id       INTEGER NOT NULL,
    godzina_id       INTEGER,
    pracownik_id     VARCHAR2(12 CHAR),
    strona_grupy     VARCHAR2(10 CHAR),
    sala             INTEGER NOT NULL
);

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT jedne_zaj_na_podgrupe_un UNIQUE ( dzien_tygodnia,
                                                     grupa_id,
                                                     godzina_id,
                                                     strona_grupy );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT jedne_zaj_na_sale_un UNIQUE ( dzien_tygodnia,
                                                 godzina_id,
                                                 sala );

CREATE TABLE zespoly (
    id           INTEGER NOT NULL,
    nazwa        VARCHAR2(20 CHAR),
    wydzial_id   VARCHAR2(7 CHAR) NOT NULL
);

ALTER TABLE zespoly ADD CONSTRAINT zespoly_pk PRIMARY KEY ( id );

ALTER TABLE zespoly ADD CONSTRAINT zespol_na_wydzial_un UNIQUE ( nazwa,
                                                                 wydzial_id );

ALTER TABLE grupy_dziekanskie
    ADD CONSTRAINT grupa_dziekanska_semestr_fk FOREIGN KEY ( semestr_id )
        REFERENCES semestr ( id );

ALTER TABLE kierunki
    ADD CONSTRAINT kierunki_wydzialy_fk FOREIGN KEY ( wydzial_id )
        REFERENCES wydzialy ( skrot );

ALTER TABLE oceny
    ADD CONSTRAINT oceny_pracownik_fk FOREIGN KEY ( pracownik_id )
        REFERENCES pracownicy ( id );

ALTER TABLE oceny
    ADD CONSTRAINT oceny_student_fk FOREIGN KEY ( student_id )
        REFERENCES studenci ( id );

ALTER TABLE oceny
    ADD CONSTRAINT oceny_zajecia_fk FOREIGN KEY ( zajecia_id )
        REFERENCES zajecia ( id );

ALTER TABLE pracownicy
    ADD CONSTRAINT pracownik_osoba_fk FOREIGN KEY ( id )
        REFERENCES osoby ( id );

ALTER TABLE pracownicy
    ADD CONSTRAINT pracownik_zespoly_fk FOREIGN KEY ( zespol_id )
        REFERENCES zespoly ( id );

ALTER TABLE przedmioty
    ADD CONSTRAINT przedmioty_semestr_fk FOREIGN KEY ( semestr_id )
        REFERENCES semestr ( id );

ALTER TABLE semestr
    ADD CONSTRAINT semestr_kierunki_fk FOREIGN KEY ( kierunek_id )
        REFERENCES kierunki ( id );

ALTER TABLE studenci
    ADD CONSTRAINT student_grupa_dziekanska_fk FOREIGN KEY ( grupa_id )
        REFERENCES grupy_dziekanskie ( id );

ALTER TABLE studenci
    ADD CONSTRAINT student_osoba_fk FOREIGN KEY ( id )
        REFERENCES osoby ( id );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT zaj_w_pl_godz_fk FOREIGN KEY ( godzina_id )
        REFERENCES godziny_zajec ( numer );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT zaj_w_pl_gr_dziek_fk FOREIGN KEY ( grupa_id )
        REFERENCES grupy_dziekanskie ( id );

ALTER TABLE zajecia
    ADD CONSTRAINT zajecia_przedmioty_fk FOREIGN KEY ( przedmiot_id )
        REFERENCES przedmioty ( id );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT zajecia_w_planie_pracownik_fk FOREIGN KEY ( pracownik_id )
        REFERENCES pracownicy ( id );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT zajecia_w_planie_sale_fk FOREIGN KEY ( sala )
        REFERENCES sale ( id );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT zajecia_w_planie_zajecia_fk FOREIGN KEY ( zajecia_id )
        REFERENCES zajecia ( id );

ALTER TABLE zespoly
    ADD CONSTRAINT zespoly_wydzialy_fk FOREIGN KEY ( wydzial_id )
        REFERENCES wydzialy ( skrot );

ALTER TABLE grupy_dziekanskie
    ADD CONSTRAINT grupa_dziekanska_semestr_fk FOREIGN KEY ( semestr_id )
        REFERENCES semestr ( id );

ALTER TABLE kierunki
    ADD CONSTRAINT kierunki_wydzialy_fk FOREIGN KEY ( wydzial_id )
        REFERENCES wydzialy ( skrot );

ALTER TABLE oceny
    ADD CONSTRAINT oceny_pracownik_fk FOREIGN KEY ( pracownik_id )
        REFERENCES pracownicy ( id );

ALTER TABLE oceny
    ADD CONSTRAINT oceny_student_fk FOREIGN KEY ( student_id )
        REFERENCES studenci ( id );

ALTER TABLE oceny
    ADD CONSTRAINT oceny_zajecia_fk FOREIGN KEY ( zajecia_id )
        REFERENCES zajecia ( id );

ALTER TABLE pracownicy
    ADD CONSTRAINT pracownik_osoba_fk FOREIGN KEY ( id )
        REFERENCES osoby ( id );

ALTER TABLE pracownicy
    ADD CONSTRAINT pracownik_zespoly_fk FOREIGN KEY ( zespol_id )
        REFERENCES zespoly ( id );

ALTER TABLE przedmioty
    ADD CONSTRAINT przedmioty_semestr_fk FOREIGN KEY ( semestr_id )
        REFERENCES semestr ( id );

ALTER TABLE semestr
    ADD CONSTRAINT semestr_kierunki_fk FOREIGN KEY ( kierunek_id )
        REFERENCES kierunki ( id );

ALTER TABLE studenci
    ADD CONSTRAINT student_grupa_dziekanska_fk FOREIGN KEY ( grupa_id )
        REFERENCES grupy_dziekanskie ( id );

ALTER TABLE studenci
    ADD CONSTRAINT student_osoba_fk FOREIGN KEY ( id )
        REFERENCES osoby ( id );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT zaj_w_pl_godz_fk FOREIGN KEY ( godzina_id )
        REFERENCES godziny_zajec ( numer );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT zaj_w_pl_gr_dziek_fk FOREIGN KEY ( grupa_id )
        REFERENCES grupy_dziekanskie ( id );

ALTER TABLE zajecia
    ADD CONSTRAINT zajecia_przedmioty_fk FOREIGN KEY ( przedmiot_id )
        REFERENCES przedmioty ( id );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT zajecia_w_planie_pracownik_fk FOREIGN KEY ( pracownik_id )
        REFERENCES pracownicy ( id );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT zajecia_w_planie_sale_fk FOREIGN KEY ( sala )
        REFERENCES sale ( id );

ALTER TABLE zajecia_w_planie
    ADD CONSTRAINT zajecia_w_planie_zajecia_fk FOREIGN KEY ( zajecia_id )
        REFERENCES zajecia ( id );

ALTER TABLE zespoly
    ADD CONSTRAINT zespoly_wydzialy_fk FOREIGN KEY ( wydzial_id )
        REFERENCES wydzialy ( skrot );

CREATE OR REPLACE TRIGGER arc_fkarc_1_studenci BEFORE
    INSERT OR UPDATE OF id ON studenci
    FOR EACH ROW
DECLARE
    d   VARCHAR2(15 CHAR);
BEGIN
    SELECT
        a.typ
    INTO d
    FROM
        osoby a
    WHERE
        a.id = :new.id;

    IF ( d IS NULL OR d <> 'Student' ) THEN
        raise_application_error(-20223, 'FK Student_Osoba_FK in Table Studenci violates Arc constraint on Table Osoby - discriminator column Typ doesn''t have value ''Student'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_pracownicy BEFORE
    INSERT OR UPDATE OF id ON pracownicy
    FOR EACH ROW
DECLARE
    d   VARCHAR2(15 CHAR);
BEGIN
    SELECT
        a.typ
    INTO d
    FROM
        osoby a
    WHERE
        a.id = :new.id;

    IF ( d IS NULL OR d <> 'Teacher' ) THEN
        raise_application_error(-20223, 'FK Pracownik_Osoba_FK in Table Pracownicy violates Arc constraint on Table Osoby - discriminator column Typ doesn''t have value ''Teacher'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE SEQUENCE seq_grupy START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER grupy_dziekanskie_id_trg BEFORE
    INSERT ON grupy_dziekanskie
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := seq_grupy.nextval;
END;
/

CREATE SEQUENCE seq_oceny START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER oceny_id_trg BEFORE
    INSERT ON oceny
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := seq_oceny.nextval;
END;
/

CREATE SEQUENCE seq_przedmioty START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER przedmioty_id_trg BEFORE
    INSERT ON przedmioty
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := seq_przedmioty.nextval;
END;
/

CREATE SEQUENCE seq_semestry START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER semestr_id_trg BEFORE
    INSERT ON semestr
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := seq_semestry.nextval;
END;
/

CREATE SEQUENCE seq_zajecia START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zajecia_id_trg BEFORE
    INSERT ON zajecia
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := seq_zajecia.nextval;
END;
/

CREATE SEQUENCE seq_zespoly START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zespoly_id_trg BEFORE
    INSERT ON zespoly
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
SELECT seq_zespoly.nextval INTO :new.id 
   FROM dual;
END;

-- ARTUR
-- wydzialy
insert into wydzialy(nazwa,skrot) values('Informatyki','WI');


-- godziny
insert into godziny_zajec(numer, godzina_rozpoczecia,godzina_zakonczenia) values(1, interval '0 08:00:00' day(0) to second, interval '0 09:30:00' day(0) to second);
insert into godziny_zajec(numer, godzina_rozpoczecia,godzina_zakonczenia) values(2, interval '0 09:45:00' day(0) to second, interval '0 11:15:00' day(0) to second);
insert into godziny_zajec(numer, godzina_rozpoczecia,godzina_zakonczenia) values(3, interval '0 11:45:00' day(0) to second, interval '0 13:15:00' day(0) to second);
insert into godziny_zajec(numer, godzina_rozpoczecia,godzina_zakonczenia) values(4, interval '0 13:30:00' day(0) to second, interval '0 15:00:00' day(0) to second);
insert into godziny_zajec(numer, godzina_rozpoczecia,godzina_zakonczenia) values(5, interval '0 15:10:00' day(0) to second, interval '0 16:40:00' day(0) to second);
insert into godziny_zajec(numer, godzina_rozpoczecia,godzina_zakonczenia) values(6, interval '0 16:50:00' day(0) to second, interval '0 18:20:00' day(0) to second);
insert into godziny_zajec(numer, godzina_rozpoczecia,godzina_zakonczenia) values(7, interval '0 18:30:00' day(0) to second, interval '0 20:00:00' day(0) to second);
insert into godziny_zajec(numer, godzina_rozpoczecia,godzina_zakonczenia) values(8, interval '0 20:10:00' day(0) to second, interval '0 21:40:00' day(0) to second);

-- zespoly
insert into zespoly (NAZWA,wydzial_ID) values ('ADMINISTRACJA','WI');
insert into zespoly (NAZWA,wydzial_ID) values ('SYSTEMY ROZPROSZONE','WI');
insert into zespoly (NAZWA,wydzial_ID) values ('SYSTEMY EKSPERCKIE','WI');
insert into zespoly (NAZWA,wydzial_ID) values ('ALGORYTMY','WI');
insert into zespoly (NAZWA,wydzial_ID) values ('BADANIA OPERACYJNE','WI');


-- kierunki
CREATE SEQUENCE seq_kierunki START WITH 1 NOCACHE ORDER;
CREATE OR REPLACE TRIGGER kierunki_id_trg BEFORE
    INSERT ON kierunki
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := seq_kierunki.nextval;
END;
/
insert into kierunki(nazwa,wydzial_id) values('Informatyka','WI');
    

-- semestry
rename semestr to semestry;
insert into semestry 
(numer,rok,stopien,tryb,pora_roku,kierunek_ID)
values
(1,1,1,'stacjonarne','zimowy',(select id from kierunki where nazwa = 'Informatyka' and wydzial_id='WI'));
insert into semestry 
(numer,rok, stopien,tryb,pora_roku,kierunek_ID)
values
(2,1,1,'stacjonarne','zimowy',(select id from kierunki where nazwa = 'Informatyka' and wydzial_id='WI'));
insert into semestry 
(numer,rok, stopien,tryb,pora_roku,kierunek_ID)
values
(3,2,1,'stacjonarne','zimowy',(select id from kierunki where nazwa = 'Informatyka' and wydzial_id='WI'));
insert into semestry 
(numer,rok, stopien,tryb,pora_roku,kierunek_ID)
values
(4,2,1,'stacjonarne','zimowy',(select id from kierunki where nazwa = 'Informatyka' and wydzial_id='WI'));
insert into semestry 
(numer,rok, stopien,tryb,pora_roku,kierunek_ID)
values
(5,3,1,'stacjonarne','zimowy',(select id from kierunki where nazwa = 'Informatyka' and wydzial_id='WI'));
insert into semestry 
(numer,rok, stopien,tryb,pora_roku,kierunek_ID)
values
(6,3,1,'stacjonarne','zimowy',(select id from kierunki where nazwa = 'Informatyka' and wydzial_id='WI'));
insert into semestry 
(numer,rok, stopien,tryb,pora_roku,kierunek_ID)
values
(7,4,1,'stacjonarne','zimowy',(select id from kierunki where nazwa = 'Informatyka' and wydzial_id='WI'));

-- grupy
insert into grupy_dziekanskie(symbol,semestr_id) values('I1', (select id from semestry where numer=1));
insert into grupy_dziekanskie(symbol,semestr_id) values('I1', (select id from semestry where numer=2));
insert into grupy_dziekanskie(symbol,semestr_id) values('I1', (select id from semestry where numer=3));
insert into grupy_dziekanskie(symbol,semestr_id) values('I1', (select id from semestry where numer=4));
insert into grupy_dziekanskie(symbol,semestr_id) values('I1', (select id from semestry where numer=5));
insert into grupy_dziekanskie(symbol,semestr_id) values('I1', (select id from semestry where numer=6));
insert into grupy_dziekanskie(symbol,semestr_id) values('I1', (select id from semestry where numer=7));
insert into grupy_dziekanskie(symbol,semestr_id) values('I2', (select id from semestry where numer=1));
insert into grupy_dziekanskie(symbol,semestr_id) values('I2', (select id from semestry where numer=2));
insert into grupy_dziekanskie(symbol,semestr_id) values('I2', (select id from semestry where numer=3));
insert into grupy_dziekanskie(symbol,semestr_id) values('I2', (select id from semestry where numer=4));
insert into grupy_dziekanskie(symbol,semestr_id) values('I2', (select id from semestry where numer=5));
insert into grupy_dziekanskie(symbol,semestr_id) values('I2', (select id from semestry where numer=6));
insert into grupy_dziekanskie(symbol,semestr_id) values('I2', (select id from semestry where numer=7));
insert into grupy_dziekanskie(symbol,semestr_id) values('I3', (select id from semestry where numer=1));
insert into grupy_dziekanskie(symbol,semestr_id) values('I3', (select id from semestry where numer=2));
insert into grupy_dziekanskie(symbol,semestr_id) values('I3', (select id from semestry where numer=3));
insert into grupy_dziekanskie(symbol,semestr_id) values('I3', (select id from semestry where numer=4));
insert into grupy_dziekanskie(symbol,semestr_id) values('I3', (select id from semestry where numer=5));
insert into grupy_dziekanskie(symbol,semestr_id) values('I3', (select id from semestry where numer=6));
insert into grupy_dziekanskie(symbol,semestr_id) values('I3', (select id from semestry where numer=7));
insert into grupy_dziekanskie(symbol,semestr_id) values('I4', (select id from semestry where numer=1));
insert into grupy_dziekanskie(symbol,semestr_id) values('I4', (select id from semestry where numer=2));
insert into grupy_dziekanskie(symbol,semestr_id) values('I4', (select id from semestry where numer=3));
insert into grupy_dziekanskie(symbol,semestr_id) values('I4', (select id from semestry where numer=4));
insert into grupy_dziekanskie(symbol,semestr_id) values('I4', (select id from semestry where numer=5));
insert into grupy_dziekanskie(symbol,semestr_id) values('I4', (select id from semestry where numer=6));
insert into grupy_dziekanskie(symbol,semestr_id) values('I4', (select id from semestry where numer=7));
insert into grupy_dziekanskie(symbol,semestr_id) values('I5', (select id from semestry where numer=1));
insert into grupy_dziekanskie(symbol,semestr_id) values('I5', (select id from semestry where numer=2));
insert into grupy_dziekanskie(symbol,semestr_id) values('I5', (select id from semestry where numer=3));
insert into grupy_dziekanskie(symbol,semestr_id) values('I5', (select id from semestry where numer=4));
insert into grupy_dziekanskie(symbol,semestr_id) values('I5', (select id from semestry where numer=5));
insert into grupy_dziekanskie(symbol,semestr_id) values('I5', (select id from semestry where numer=6));
insert into grupy_dziekanskie(symbol,semestr_id) values('I5', (select id from semestry where numer=7));
insert into grupy_dziekanskie(symbol,semestr_id) values('I6', (select id from semestry where numer=1));
insert into grupy_dziekanskie(symbol,semestr_id) values('I6', (select id from semestry where numer=2));
insert into grupy_dziekanskie(symbol,semestr_id) values('I6', (select id from semestry where numer=3));
insert into grupy_dziekanskie(symbol,semestr_id) values('I6', (select id from semestry where numer=4));

-- sale
CREATE SEQUENCE seq_sale START WITH 1 NOCACHE ORDER;
CREATE OR REPLACE TRIGGER sale_id_trg BEFORE
    INSERT ON sale
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := seq_sale.nextval;
END;
/
insert into sale(nazwa) values('2 CW');
insert into sale(nazwa) values('8 CW');
insert into sale(nazwa) values('L053 BT');
insert into sale(nazwa) values('lab. 1.6.16');
insert into sale(nazwa) values('lab. 1.6.18');
insert into sale(nazwa) values('lab. 1.6.21');
insert into sale(nazwa) values('lab. 1.6.22');
insert into sale(nazwa) values('lab. 1.6.23');
insert into sale(nazwa) values('lab. 43');
insert into sale(nazwa) values('lab. 44');
insert into sale(nazwa) values('lab. 45');
insert into sale(nazwa) values('lab. 143');
insert into sale(nazwa) values('lab. 2.7.14');
insert into sale(nazwa) values('lab. 2.7.15');
insert into sale(nazwa) values('lab. 2.7.16');
insert into sale(nazwa) values('lab. P6');

-- przedmioty
ALTER TABLE przedmioty MODIFY (NAZWA VARCHAR2(50 CHAR));
insert into przedmioty(nazwa,semestr_id) values('Sieci komputerowe 2',(select id from semestry where numer=5));
insert into przedmioty(nazwa,semestr_id) values('Systemy zarządzania bazami danych',(select id from semestry where numer=5));
insert into przedmioty(nazwa,semestr_id) values('Wspomaganie decyzji',(select id from semestry where numer=5));
insert into przedmioty(nazwa,semestr_id) values('Inżynieria Oprogramowania',(select id from semestry where numer=5));
insert into przedmioty(nazwa,semestr_id) values('Komunikacja człowiek-komputer',(select id from semestry where numer=5));
insert into przedmioty(nazwa,semestr_id) values('Sztuczna Inteligencja',(select id from semestry where numer=5));
insert into przedmioty(nazwa,semestr_id) values('Systemy wbudowane',(select id from semestry where numer=5));

-- zajecia
insert into zajecia(typ,przedmiot_id) values('l',(select id from przedmioty where nazwa='Sieci komputerowe 2'));
insert into zajecia(typ,przedmiot_id) values('w',(select id from przedmioty where nazwa='Sieci komputerowe 2'));
insert into zajecia(typ,przedmiot_id) values('l',(select id from przedmioty where nazwa='Systemy zarządzania bazami danych'));
insert into zajecia(typ,przedmiot_id) values('w',(select id from przedmioty where nazwa='Systemy zarządzania bazami danych'));
insert into zajecia(typ,przedmiot_id) values('l',(select id from przedmioty where nazwa='Wspomaganie decyzji'));
insert into zajecia(typ,przedmiot_id) values('w',(select id from przedmioty where nazwa='Wspomaganie decyzji'));
insert into zajecia(typ,przedmiot_id) values('l',(select id from przedmioty where nazwa='Inżynieria Oprogramowania'));
insert into zajecia(typ,przedmiot_id) values('w',(select id from przedmioty where nazwa='Inżynieria Oprogramowania'));
insert into zajecia(typ,przedmiot_id) values('l',(select id from przedmioty where nazwa='Komunikacja człowiek-komputer'));
insert into zajecia(typ,przedmiot_id) values('w',(select id from przedmioty where nazwa='Komunikacja człowiek-komputer'));
insert into zajecia(typ,przedmiot_id) values('l',(select id from przedmioty where nazwa='Sztuczna Inteligencja'));
insert into zajecia(typ,przedmiot_id) values('w',(select id from przedmioty where nazwa='Sztuczna Inteligencja'));
insert into zajecia(typ,przedmiot_id) values('l',(select id from przedmioty where nazwa='Systemy wbudowane'));
insert into zajecia(typ,przedmiot_id) values('w',(select id from przedmioty where nazwa='Systemy wbudowane'));

-- osoby
CREATE SEQUENCE seq_pracownicy START WITH 1 NOCACHE ORDER;
CREATE SEQUENCE seq_studenci START WITH 1500 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER osoby_id_trg BEFORE
    INSERT ON osoby
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
  IF :new.typ = 'Student' THEN 
      :new.id := seq_studenci.nextval;
  END IF;
  IF :new.typ = 'Teacher' THEN 
      :new.id := seq_pracownicy.nextval;
  END IF;
END;
/


-- zajecia w planie
ALTER TABLE zajecia_w_planie MODIFY (dzien_tygodnia NUMBER(38,0));





-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            14
-- CREATE INDEX                             0
-- ALTER TABLE                             58
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          11
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          9
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
